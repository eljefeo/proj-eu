package ProjEuProblems;

import ProjEuUtil.Util;

public class Problem44 implements Problem { // takes 6 sec

	/*
	 
	 Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?
	 
	 */
	
	public static void main(String[] args) {
		Problem p = new Problem44();
		p.runProblem();
	
	} 
	
	
	public String problem(){// cant find 2 pents that are nex to eachother that work... trying to find pents that are 2 away, then 3 away etc..

		//so we are doing this without ever finding any pentagonal numbers
		// I simply calculate the sums and difs of certain pents until we find an answer
		// we dont actually need to find any pentagonal numbers, just the sum and difference
		int max = 100; 
		for(int howFarApart=1; howFarApart < max; howFarApart++){ 
			//this determines how far of a gap between the pentagonals we want
			// we start by checking pents closer together, then farther and farther apart
		
			// we start with the smallest distance we can between the pentagonal numbers.
			// so we check all numbers next to each other (1 away) under max
			// if we dont find anything, we start checking numbers that are 2 away, 3 away etc.. until we find a pair..
			// that way we keep the difference as small as possible until we find an answer
			if(howFarApart == max-1) {
				max = max*10;
				howFarApart = 1;
				System.out.println("Changing max to " + max);
			}
			
			long sum = 1 + Util.getPentagonalNumber(howFarApart+1); // need to start with the first sum depending on how far apart we are doing 
			long nextSumAdd =  8 + 3*howFarApart;
			long dif = Util.getPentagonalNumber(howFarApart) ;
			for(int i=1; i < max; i++){
				dif += (3*howFarApart) ; // we know the next difference will be this
				if(Util.isPentagonalNumber(sum) && Util.isPentagonalNumber(dif)){
					//These are the 2 pents we are currently at in this loop, in case you were curious
					//long p1 = Util.getPentagonalNumber(i);
					//long p2 = Util.getPentagonalNumber(i+howFarApart);
					return "" + dif;
				}
				sum += nextSumAdd; // we know the next sum will be this
				nextSumAdd += 6; //and this
			}
		}
		return null;
	}

//Notes:
	//1, 5, 12, 22, 35, 51, 70, 92, 117, 145, 176, 210 ...
	//sums
	// 1away = 6 17 34 57 86 121
	// 2away = 13 27 37 73 
	// 3away 23 40 73 92 127

	//: 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, 176, 210
	//    6, 17, 34  57  86 121 ( 1 away) - we need to generate these
	//      +11 17 23  29  35 - add these evertime ( these go up by 6 each)
	
	//: 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, 176, 210
	//    13, 27, 47  73  105 143 ( 2 away)
	//      +14 20 26 32
	
	//: 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, 176, 210
	//    23, 40, 63  92  127 168 ( 3 away)
	//      +17 23 29 35
	
	//: 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, 176, 210
	//    36, 56, 82  114 152 ( 4 away)
	//      +20 26 32 38
	
	
	//for any pent is there an easy way to get to the next one?
	// so like 22..next one is 35 , I guess we can get the index of 22 and just add n and do it again
	// or ... if the next pent is 13 away : // all the pents are 4 apart, then 7, 10, 13, 16, 19, etc.. its +3 evertime
	 // so its 1 + someMultipleOf3
	//I feel like we could have shortcutted our way with a little math...there has to be a nice formula to shoot us straight to an answer..
	/*
	 so like 22(p4) and 70(p7) add to be 92(p8)
	 and 92(p8) and 70(p7) subtract to be 22(p4)
	 and p8 =  8 * (3*8 - 1) /2 = 92
	 
	 p9553 = 136884937 & 10680 = 171088260
	 
	 a = a * (3*a - 1) /2 = n  
	 b = b * (3*b - 1) /2
	 c = c * (3*c - 1) /2
	 d = d * (3*d - 1) /2
	 
	 a = 1 + 3n
	 
	 a * (3*a - 1) /2 +  b * (3*b - 1) /2  = c * (3*c - 1) /2 (mult 2 each side?)
	 a * (3*a - 1) +  b * (3*b - 1)   = c * (3*c - 1) === 3a^2 - a   + 3b^2 - b = 3c^2 - c
	 3a^2 - a   +  3b^2 - b = 3c^2 - c
	 = 3a^2 + 3b^2 -a -b = 3c^2 - c
	 3a^2 + 3b^2 - 3c^2 = a + b - c
	 3(a^2 + b^2 - c^2) = a + b - c
	 
	 
	 
	 
	 a + b = c ------ plus ======  	a * (3*a - 1) /2 +  b * (3*b - 1) /2  = c * (3*c - 1) /2
	 a - b = d ------ minus======	a * (3*a - 1) /2 - (b * (3*b - 1) /2) = d * (3*d - 1) /2
	 
	 a = c - b ====== a * (3*a - 1) /2 = c * (3*c - 1) /2    -    b * (3*b - 1) /2
	 a = d + b ====== a * (3*a - 1) /2 = d * (3*d - 1) /2    +    b * (3*b - 1) /2
	 
	 
	 c - b - b = d ... c - 2b = d
	 d + b + b = c ... d + 2b = c
	 
	d + 2b = c
	2b = c - d
	b = (c - d) / 2
	
	
	
	a - d = (c - d) / 2
	2a - 2d = c - d
	 
	 does that mean...
	 2a = c - d - 2d
	 2a = c - 3d
	 
	 ?????
	 2a + 3d = c?
	 a + b = c
	 a - b = d
	 ...
	 a + b = 2a + 3d
	 b = a + 3d? hmm doesnt seem right
	 */
	
	
	//a * (3*a - 1) /2 + b * (3*b - 1) /2 = c * (3*c - 1) /2;
	
	
	
	//a * (3*a - 1) /2 - b * (3*b - 1) /2 = d * (3*d - 1) /2;
	//a * (3*a - 1) = d * (3*d - 1) + b * (3*b - 1)
	// what about the sums....: 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, 176, 210
	//6 17 34 57 86 121 162 (1 away) 
	// 11 17 23 29 35 41 - for 1 away the next one is +6 everytime
	// seems to be 6*n - 1
	//6*2 -1 = 11, 6*3 - 1 = 17, 
	// what does this mean, this means 11 is the distance between sums of 3 pents next to eachother?
	// like 11 is 1+5(6) and 5+12(17) == 11 I guess ::: this is for pents 1, 2, 3 so p2+p3 - p1+p2 = 11
	// so p3 - p1 + 2p2 = 11 :: p3 - p1 + p2 = 11/2
	// then 11+6 = 17
	// so 17 is diff for 5,12,22 : 5+12(17) , 12+22(34) : those sums are 17 apart ::: this is for pents 2, 3, 4
	// so if we know the next one will be 23 apart... what pents can we find from this?
	// 2 nums that diff to be 23? those are the 2 sums of the 3 touching pents?
	// so something + 23 = next sum? do we know what pent we are at? like index?
	
	
}
